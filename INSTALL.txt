%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INSTALL mpYALMIP
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

NOTE: YOU NEED TO HAVE YALMIP INSTALLED. THE TOOLBOX IS A SLIGHTLY AND INEFFICIENTLY 
MODIFIED VERSION OF SOME YALMIP FUNCTIONS, WITHOUT RISKING TO MODIFY YALMIP ITSELF. 
HOWEVER YOU NEED YALMIP TO MAKE IT ALL WORK!

YOU ALSO NEED 
1) SDPA-GMP: install from the website.
2) SDPA MATLAB TOOLBOX (SDPA-M): this is installed with the standard version
                                 of SDPA (follow the instructions online).

CHECKS: in MATLAB, run 

>> yalmiptest 

to check if YALMIP finds SDPA - if so, you have SDPA-M installed.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(1) Correct Mistake in sdpa/share/sdpa/mex/mexReadOutput.cpp

Open the file sdpa/share/sdpa/mex/mexReadOutput.cpp. On line 115 replace

 + strlen("phase.value  = "); 

with

 + strlen("phase.value = ");

(GET RID OF THE DOUBLE SPACE BEFORE THE EQUAL). Then recompile the SDPA-M 
package: in a Terminal window, type

$ cd {path-to/sdpa/share/sdpa/mex/mexReadOutput.cpp}
$ make clean
$ make

NOTE: this might be different on Windows; check original SDPA installation 
instructions.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(2) Install mpYALMIP

a) Add mpYALMIP to the MATLAB path.

b) At the beginning of SDPA_GMP_M.m, change the variable "path2sdpagmp" to 
   the location of the sdpa_gmp executable. For example,

   path2sdpagmp = '/usr/local/bin/';

c) At the beginning of callsdpagmp.m, change the variable "path2sdpagmp" to 
   the location of the sdpa_gmp executable. For example,

   path2sdpagmp = '/usr/local/bin/';


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
3) Use mpYALMIP

a) You need a file called "param.sdpa" in your MATLAB current working directory
   for this to work (otherwise, calling sdpa_gmp will fail). 

b) FROM YALMIP: 

    (i) For SOS problems defined in yalmip, call

        >> [sol,m,Q,residuals,everything] = solvesos_SDPAgmp(F,obj,options,params,candidateMonomials)

        in the same way you would use the standard YALMIP command "solvesos".

   (ii) For SDP problems in yalmip, call

        >> sol = solvesdp_SDPAgmp(Constraint,Objective,options);

        in the same way you would call the YALMIP command "optimize"

  (iii) For SDP problems for which you have Sedumi input A,b,c,K:

        >> [objVal,x,X,Y,INFO] = SDPA_GMP_M(A,b,c,K,accuracy);  % solve problem

        the parameter "accuracy" controls to how many digits the input files
        are written. Example:

        accuracy = '%16.16g'.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
HAPPY OPTIMISATION!

